import { Matcher, queries } from "@testing-library/dom";
import type { Options, WithinSelectors } from "./types";
declare global {
    interface Window {
        TestingLibraryDom: typeof queries;
    }
}
export declare function configureOnce(options: Partial<Options>): Promise<void>;
export declare function configure(options: Partial<Options>): {
    content: string;
};
declare type SelectorArg = string | Selector | SelectorPromise | (() => SelectorPromise);
export declare function within(selector: SelectorArg): WithinSelectors;
export declare const getByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const getAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const queryByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const queryAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const findByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const findAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const getByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const getAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const queryByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const queryAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const findByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const findAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
export declare const getByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const getAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const queryByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const queryAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const findByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const findAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
export declare const findAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const getAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const queryAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const findAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
export declare const screen: {
    getByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    getAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    queryByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    queryAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    findByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    findAllByLabelText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    getByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    getAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    queryByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    queryAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    findByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    findAllByText: (matcher: Matcher, options?: import("@testing-library/dom").SelectorMatcherOptions | undefined) => Selector;
    getByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findAllByPlaceholderText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findAllByAltText: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findAllByTitle: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    getAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    queryByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    queryAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    findByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    findAllByRole: (matcher: Matcher, options?: queries.ByRoleOptions | undefined) => Selector;
    findAllByDisplayValue: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    getAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    queryAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
    findAllByTestId: (matcher: Matcher, options?: import("@testing-library/dom").MatcherOptions | undefined) => Selector;
};
export * from "./types";
