version: 2.1
orbs:
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
executors:
  docker-publisher:
    environment:
      CLIENT_IMAGE_NAME: mphbo777/music-corner-client
      NGINX_IMAGE_NAME: mphbo777/music-corner-nginx
      SERVER_IMAGE_NAME: mphbo777/music-corner-server
      
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Images
          command: | 
            docker build -t $CLIENT_IMAGE_NAME:latest ./client
            docker build -t $NGINX_IMAGE_NAME:latest ./nginx
            docker build -t $SERVER_IMAGE_NAME:latest ./server
      - run:
          name: Archive Docker Images
          command: |
            docker save -o client.tar $CLIENT_IMAGE_NAME
            docker save -o nginx.tar $NGINX_IMAGE_NAME
            docker save -o server.tar $SERVER_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./client.tar
            - ./nginx.tar
            - ./server.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load Archived Docker Images
          command: |
            docker load -i /tmp/workspace/client.tar
            docker load -i /tmp/workspace/nginx.tar
            docker load -i /tmp/workspace/server.tar
      - run:
          name: Publish Docker Images to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $CLIENT_IMAGE_NAME:latest
            docker push $NGINX_IMAGE_NAME:latest
            docker push $SERVER_IMAGE_NAME:latest
workflows:
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master
      - aws-elastic-beanstalk/deploy:
          context: aws-creds
          application-name: music-corner
          environment-name: Musiccorner-env
          filters:
            branches:
              only: master
          requires:
            - build
            - publish-latest